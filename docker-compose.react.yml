version: '3.8'

services:
  # Direct connector (generates demo data)
  mt5-connector:
    build:
      context: .
      dockerfile: Dockerfile.direct
    container_name: mt5-connector
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - trading-network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: trading-redis
    ports:
      - "6382:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - trading-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Trading Backend Service
  trading-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: trading-backend
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FLASK_ENV=development
    depends_on:
      redis:
        condition: service_healthy
      mt5-connector:
        condition: service_started
    volumes:
      - ./trading_system:/app/trading_system
      - ./logs:/app/logs
    ports:
      - "8009:8009"
    restart: unless-stopped
    networks:
      - trading-network
   

  
 
volumes:
  redis_data:
    driver: local

networks:
  trading-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16